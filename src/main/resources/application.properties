server.port=8081

spring.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:XE
spring.datasource.username=cdmall
spring.datasource.password=1234

spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.database=oracle

spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.jpa.properties.hibernate.format_sql=true
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %clr(%-5level) %clr(%logger{36}){cyan} - %msg%n
logging.level.org.hibernate=info

### 파일업로드 하는 방법 : apache commons fileupload, servlet 3.1이후 직접 지원
### multipart/form-data를 누가 처리할거냐? commons를 사용하면 객체를 등록해야 하고 csrf 처리를 위해 필터 등록도 필요
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-request-size = 30MB
spring.servlet.multipart.max-file-size = 10MB

### Java MailSender 설정
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=limda0958@gmail.com
spring.mail.password=Bedok136!#
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.starttls.enable=true

### server.xml에 "<Context path = "/upload/" reloadable = "true" docBase="c:/upload/image"/>" 설정 추가하기 - WebConfig 파일이랑 연결됨 
resource.path=file:///c:/upload/
upload.path=/upload/**
